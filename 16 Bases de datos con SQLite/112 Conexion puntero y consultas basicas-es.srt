1
00:00:01,380 --> 00:00:05,700
Nos ponemos manos a la obra con el tema 14 bases de datos con ese culito.

2
00:00:06,000 --> 00:00:09,240
Lo primero que tenéis que hacer es descargar la unidad.

3
00:00:09,240 --> 00:00:10,520
14.

4
00:00:10,700 --> 00:00:12,570
Los recursos de esta misma elección.

5
00:00:12,570 --> 00:00:18,360
Podéis descargarlo y comprimirlo sobrescribir las carpetas de curso Payton.

6
00:00:18,540 --> 00:00:23,910
No se os borrará nada únicamente se actualizará y os añadirá este tema 14.

7
00:00:24,030 --> 00:00:29,490
Una vez lo hayáis hecho ya podéis venir al Júpiter notebook y vamos a abrir la unidad.

8
00:00:29,490 --> 00:00:30,610
14.

9
00:00:30,660 --> 00:00:37,840
Cómo vais a ver aquí no tengo los ejercicios preparados porque lo vamos a practicar todo en el script.

10
00:00:38,130 --> 00:00:39,210
Pero sí que vais a encontrar.

11
00:00:39,210 --> 00:00:46,350
Pues ya los apuntes y de hecho quiero que veáis que estos apuntes están super bien organizados con todo

12
00:00:46,350 --> 00:00:48,000
lo que vamos a ir haciendo.

13
00:00:48,690 --> 00:00:49,920
Y abajo del todo.

14
00:00:49,920 --> 00:00:56,220
Quiero que abreus este enlace utilizando DB browser Por qué es un programa que vamos a utilizar para

15
00:00:56,220 --> 00:00:59,540
inspeccionar en tiempo real las bases de datos ese culito.

16
00:00:59,850 --> 00:01:02,120
A medida que vamos a ir trabajando con ellas.

17
00:01:02,190 --> 00:01:09,180
Así que podéis hacer clic encima del enlace se os abrirá una página web busqueis el ejecutable de vuestro

18
00:01:09,180 --> 00:01:18,460
sistema ya sea Windows 32 bits o 64 bits el de Mac o el de Linux que seguramente tendréis que compilar.

19
00:01:18,500 --> 00:01:19,730
No lo sé.

20
00:01:20,790 --> 00:01:27,880
Y una vez lo descargas pues lo instalas siguiendo los pasos y ya tendréis instalado este programa debe

21
00:01:27,900 --> 00:01:34,770
browser ese culitos que de momento lo voy a dejar minimizado y luego trabajando con él así que vamos

22
00:01:34,770 --> 00:01:41,230
a ponernos manos a la obra con la primera lección de conexión puntero y consultas básicas.

23
00:01:42,880 --> 00:01:48,370
Lo que vamos a hacer es ir a nuestra carpeta la del tema 14 bases de datos con ese qualité en curso

24
00:01:48,370 --> 00:01:53,170
Payton y vamos a crear un nuevo fichero documento de texto.

25
00:01:53,270 --> 00:02:02,290
Vamos a llamarlo lección 0 1 o 1 punto Pi vamos a darle la extensión.

26
00:02:02,530 --> 00:02:09,310
Vamos a abrir y vamos a abrir con sublimes Dext y vamos a practicar estos conceptos básicos.

27
00:02:09,340 --> 00:02:13,570
El primer concepto básico que vamos a practicar es la conexión a la base de datos.

28
00:02:13,870 --> 00:02:20,110
Teniendo en cuenta que la primera vez que vamos a acceder no existe por tanto se va a crear automáticamente.

29
00:02:20,770 --> 00:02:26,970
Vamos a empezar importando import Security 3 el módulo 3.

30
00:02:29,020 --> 00:02:35,290
A continuación tenemos que crear una conexión a la base de datos que se creará si no existe esa base

31
00:02:35,290 --> 00:02:36,690
de datos.

32
00:02:36,990 --> 00:02:44,160
Lo vamos a hacer de la siguiente forma vamos a crear una variable llamada conexión y del módulo sekulic.

33
00:02:44,500 --> 00:02:51,880
Vamos a llamar al método conep y así entre paréntesis vamos a poner el nombre de la base de datos por

34
00:02:51,880 --> 00:02:58,760
ejemplo y nunca mejor dicho ejemplo punto y vamos a poner esta extensión por defecto debe.

35
00:03:00,360 --> 00:03:04,620
Finalmente vamos a cerrar la conexión.

36
00:03:04,620 --> 00:03:06,690
De esta forma con.

37
00:03:08,160 --> 00:03:14,850
El método clowes de la propia conexión es un objeto evidentemente y aquí estamos cerrándolo.

38
00:03:16,800 --> 00:03:20,700
Una vez tenemos esto hecho y lo ejecutamos con control.

39
00:03:21,000 --> 00:03:29,040
Pues no nos aparece nada pero si vamos al directorio veremos que se ha creado un fichero de tipo de

40
00:03:29,040 --> 00:03:31,760
B llamado ejemplo que ocupa cero cash.

41
00:03:32,040 --> 00:03:34,370
Bueno ya tenemos nuestra base de datos creada.

42
00:03:36,600 --> 00:03:43,370
Ahora tenemos que empezar a crear una estructura principal o una estructura para empezar a añadir contenido

43
00:03:43,380 --> 00:03:46,000
básicamente lo que vamos a hacer es crear una tabla.

44
00:03:46,230 --> 00:03:52,830
Por tanto lo que haremos para crear esta tabla dentro de la base de datos es ejecutar código en lenguaje

45
00:03:52,870 --> 00:04:00,900
que se cuele pero para poder hacerlo tenemos que crear antes un objeto de tipo cursor un cursor muy

46
00:04:00,900 --> 00:04:08,430
parecido al cursor que utilizamos con los ficheros pero que lo utilizaremos para trabajar sobre la base

47
00:04:08,430 --> 00:04:12,010
de datos y ejecutar nuestras consultas.

48
00:04:12,090 --> 00:04:18,540
Así que vamos a poner cursor y dentro de conexión vamos a llamar al método cursor para crear un nuevo

49
00:04:18,540 --> 00:04:18,960
cursor.

50
00:04:18,960 --> 00:04:19,970
De esta forma.

51
00:04:21,910 --> 00:04:23,430
Una vez tenemos el cursor.

52
00:04:23,600 --> 00:04:31,280
Ya podemos ejecutar código en formato o lenguaje se cuele mejor dicho a través del método.

53
00:04:32,060 --> 00:04:33,410
Exequible.

54
00:04:34,340 --> 00:04:42,680
De esta forma que tiene el cursor y como si le pasase una cadena de caracteres le vamos a pasar el código

55
00:04:42,680 --> 00:04:50,290
el lenguaje SQL el código SQL genérico para crear una tabla que vamos a llamar por ejemplo usuarios

56
00:04:50,300 --> 00:04:55,650
es el siguiente Create Table el nombre de la tabla que queremos crear.

57
00:04:56,560 --> 00:05:01,980
Y aquí vamos a poner un paréntesis y vamos a indicar los distintos.

58
00:05:03,360 --> 00:05:04,980
Qué tiene esta tabla.

59
00:05:05,600 --> 00:05:10,310
El primero es el nombre y lo vamos a poner así nuestro usuario pues tendrá un nombre.

60
00:05:10,310 --> 00:05:11,960
También tendrá una edad y un email.

61
00:05:11,970 --> 00:05:17,450
El primero vamos a poner el nombre y a continuación tenemos que indicar estos formatos que qu'elle el

62
00:05:17,450 --> 00:05:21,130
tipo de dato que tiene este campo parchar.

63
00:05:21,170 --> 00:05:25,860
De esta forma y entre paréntesis vamos a indicar por ejemplo.

64
00:05:25,970 --> 00:05:32,750
Esto es lo que va a indicar que nombre es el tipo parchar que sería como una cadena de caracteres con

65
00:05:32,840 --> 00:05:36,300
100 caracteres como máximo.

66
00:05:36,330 --> 00:05:37,840
Luego vamos a poner una coma.

67
00:05:37,970 --> 00:05:42,550
Vamos a añadir un segundo campo llamado edad de tipo integral.

68
00:05:42,830 --> 00:05:50,060
Esta es la sintaxis que tiene secuelas así que poco a poco vais a tener giros familiarizando y finalmente

69
00:05:50,330 --> 00:05:56,960
un email que también será un parchar una cadena de caracteres que también podemos poner que tenga 100

70
00:05:57,020 --> 00:05:58,430
caracteres como máximo.

71
00:05:58,430 --> 00:06:02,310
Voy a hacer el más pequeño para que quepa todo en pantalla.

72
00:06:02,960 --> 00:06:04,680
Así se ve todo.

73
00:06:06,590 --> 00:06:14,300
Una vez tenemos esto ejecutamos esta consulta esto es lo que se conoce como una consulta en formato

74
00:06:14,310 --> 00:06:15,440
SQL.

75
00:06:16,660 --> 00:06:19,830
Vamos a guardar y ejecutar con control.

76
00:06:20,580 --> 00:06:24,050
Cómo vais ha finalizado la ejecución perfectamente.

77
00:06:25,070 --> 00:06:33,030
Pero si volvemos a ejecutarlo nos da un error el error nos dice un error de tipo ese cultures operacional

78
00:06:33,120 --> 00:06:33,580
error.

79
00:06:33,590 --> 00:06:34,000
Table.

80
00:06:34,030 --> 00:06:35,660
Usuarios o reddy existe.

81
00:06:35,790 --> 00:06:36,350
Por qué.

82
00:06:36,360 --> 00:06:42,930
Porque al volver a ejecutar el código estamos intentando crear una tabla dentro de la base de datos

83
00:06:43,140 --> 00:06:45,870
que ya existe dentro de este ejemplo Punto.

84
00:06:46,140 --> 00:06:54,120
Vamos a abrir el inspector y vamos a abrir este fichero y abrir bases de datos nuestro curso Payton

85
00:06:54,690 --> 00:06:55,230
base de datos.

86
00:06:55,230 --> 00:07:00,440
Con ese culito vamos a abrir el ejemplo y aquí podemos inspeccionar las tablas.

87
00:07:01,450 --> 00:07:05,720
Que conforman nuestra base de datos concretamente la de usuarios.

88
00:07:05,750 --> 00:07:13,140
Y si la desplegamos ya podemos ver que tiene un nombre tipo garchar una edad y un email.

89
00:07:13,880 --> 00:07:19,460
Si ponemos navegar datos podemos intentar navegar por los datos que hay en la tabla a usuarios pero

90
00:07:19,460 --> 00:07:20,470
no tenemos nada.

91
00:07:20,500 --> 00:07:22,000
Está como vacía.

92
00:07:23,090 --> 00:07:31,370
Muy bien con esto como veis ya vemos que no podemos crear una tabla si la tabla ya está creada dentro

93
00:07:31,370 --> 00:07:33,350
de la base de datos.

94
00:07:33,350 --> 00:07:39,830
Muy bien pues ahora que tenemos nuestra base de datos con una tabla de usuarios vamos a empezar a añadir

95
00:07:39,830 --> 00:07:41,590
un poco de contenido dentro.

96
00:07:41,600 --> 00:07:43,530
Vamos a insertar un registro.

97
00:07:45,250 --> 00:07:51,180
Voy a comentar por ahora esta orden y vamos a trabajar.

98
00:07:51,580 --> 00:07:56,710
No pasa nada por que se vea este error aquí si de hecho podríamos ejecutarlo de nuevo para que desaparezca

99
00:07:56,710 --> 00:08:05,110
ahora y vamos a ver la sintaxis para crear un registro para insertar un nuevo usuario en nuestra tabla

100
00:08:05,110 --> 00:08:06,730
de usuarios.

101
00:08:06,730 --> 00:08:08,310
Vamos a crear de nuevo.

102
00:08:08,330 --> 00:08:20,320
O mejor dicho a ejecutar con el cursor una cuerito una consulta que hará lo siguiente y insert insertar

103
00:08:20,380 --> 00:08:32,110
en la tabla usuarios values los valores y entre paréntesis una cadena aquí irá un número y finalmente

104
00:08:32,110 --> 00:08:40,360
otra cadena y esto será por ejemplo un nombre el nombre del usuario laudar por ejemplo del usuario como

105
00:08:40,360 --> 00:08:44,220
un entero y finalmente un email de ejemplo.

106
00:08:44,940 --> 00:08:46,780
Otro por ejemplo puntocom.

107
00:08:47,200 --> 00:08:54,190
Voy a guardar y una vez ejecutamos esto de aquí vamos a probar de hacerlo vamos a hacer control.

108
00:08:55,200 --> 00:08:58,160
Y como veis no ocurre nada bueno simplemente se ejecuta.

109
00:08:58,690 --> 00:09:02,680
Ahora si vamos a nuestro inspector vamos a refrescar aquí.

110
00:09:04,080 --> 00:09:06,080
Como veis no aparece nada.

111
00:09:06,730 --> 00:09:07,620
Por qué.

112
00:09:07,640 --> 00:09:13,990
Bueno esto es un sistema de seguridad que tienen la base de datos que tenemos que confirmar los cambios.

113
00:09:14,140 --> 00:09:20,020
Después de haber ejecutado la orden y para confirmarlos lo que vamos a tener que hacer es desde la conexión

114
00:09:20,200 --> 00:09:25,590
confirmar todos los cambios que hemos realizado con el método commit.

115
00:09:25,930 --> 00:09:31,750
Justo antes de cerrar la conexión vamos a guardar y ahora vamos a volver a hacer control para ejecutar.

116
00:09:32,590 --> 00:09:37,750
No vemos que pase nada pero si vamos con nuestro inspector y actualizamos.

117
00:09:37,960 --> 00:09:40,740
Ahora ya no os aparece aquí dentro de la tabla.

118
00:09:40,760 --> 00:09:46,550
Usuarios un valor Héctor 27 y un email.

119
00:09:47,320 --> 00:09:54,600
Si vuelvo a sublime y vuelve a ejecutar varias veces este código y actualizo.

120
00:09:54,640 --> 00:10:00,130
Como veis se añaden varias veces el elemento porque tampoco hay un control en este preciso instante

121
00:10:00,580 --> 00:10:05,750
de que no se repitan nombres ni ningún campo oseira enseñando poco a poco.

122
00:10:05,860 --> 00:10:11,470
Pero por ahora vamos a centrarnos en cómo recuperar estos registros que están guardados en la base de

123
00:10:11,470 --> 00:10:13,340
datos.

124
00:10:13,400 --> 00:10:21,880
Antes sin embargo vamos a borrar estos tres para que solamente que el primero de esta forma los seleccionamos

125
00:10:21,880 --> 00:10:23,130
y los borramos.

126
00:10:23,730 --> 00:10:25,600
Y vamos a guardar los cambios.

127
00:10:26,030 --> 00:10:30,670
Vale ahora mismo actualizamos ya solo tenemos el primero.

128
00:10:30,760 --> 00:10:37,240
Esto es una de las ventajas de utilizar un inspector externo para poder ir viendo en tiempo real lo

129
00:10:37,240 --> 00:10:40,630
que estamos haciendo en nuestra base de datos.

130
00:10:40,630 --> 00:10:49,180
Así que como os comentaba vamos a recuperar el primer registro de la base de datos de alguna forma voy

131
00:10:49,180 --> 00:10:54,270
a comentar esto de aquí y vamos a por.

132
00:10:55,080 --> 00:10:59,180
La consulta con la que vamos a recuperar el primer registro.

133
00:11:01,090 --> 00:11:11,500
Cursor mccloud y aquí vamos a realizar una consulta llamada Select seleccionar un asterisco que significa

134
00:11:11,500 --> 00:11:20,370
seleccionar todos los campos from usuarios todos los campos o registros por decirlo de alguna forma.

135
00:11:20,560 --> 00:11:22,370
Cuando ejecutamos esto.

136
00:11:24,750 --> 00:11:26,610
Si guardamos y lo ejecutamos.

137
00:11:26,790 --> 00:11:31,590
Evidentemente no sucede nada si intentamos mostrar el contenido del cursor.

138
00:11:31,650 --> 00:11:39,390
Después de haber ejecutado este selecto nos aparece aquí un objeto de tipo cursor pero todavía no sabemos

139
00:11:39,390 --> 00:11:40,900
qué es lo que hay aquí.

140
00:11:40,950 --> 00:11:46,350
Esto pasa por que si bien es cierto que el cursor está ahora mismo almacenando los posibles usuarios

141
00:11:46,620 --> 00:11:53,490
que sean devueltos de ejecutar esta consulta todavía no le hemos dicho que lo transforme en un objeto

142
00:11:53,520 --> 00:11:56,570
en algo que podamos interpretar directamente.

143
00:11:56,580 --> 00:12:02,560
Para hacerlo tendríamos que hacer lo siguiente Vamos a guardar el usuario.

144
00:12:02,580 --> 00:12:08,880
El resultado de ejecutar cursor y el método Fetch One.

145
00:12:09,420 --> 00:12:16,080
De esta forma le vamos a decir que recupere el primer registro de acuerdo.

146
00:12:16,080 --> 00:12:21,780
De esta forma y luego vamos a mostrar este usuario a ver qué es este usuario exactamente.

147
00:12:22,350 --> 00:12:26,840
Vamos a hacer controlé y aquí lo tenemos perfectamente.

148
00:12:27,240 --> 00:12:35,490
Lo que es usuario al hacer el Fetch Juan está recuperando el primer registro en una forma de tupla un

149
00:12:35,490 --> 00:12:42,750
elemento que si lo recordáis no podíamos modificar formada por tres campos el primero el nombre el segundo

150
00:12:42,750 --> 00:12:45,960
la edad y el tercero el email.

151
00:12:46,050 --> 00:12:53,820
Con esto si borramos un poco por aquí arriba ya podríamos utilizando los índices acceder por ejemplo

152
00:12:53,820 --> 00:13:01,590
únicamente al nombre o a la edad con un 1 o únicamente email con un 2.

153
00:13:01,680 --> 00:13:05,940
Por tanto ya sabemos cómo recuperar el primer elemento.

154
00:13:06,000 --> 00:13:12,870
Cabe decir que si hacemos fechan y hubiera más de un elemento al volver a hacer fechan por ejemplo si

155
00:13:12,870 --> 00:13:18,660
hiciéramos pechugona aquí hubiera otro elemento la base de datos se recuperaría el siguiente elemento

156
00:13:18,670 --> 00:13:23,960
porque el cursor se ha movido hacia un segundo elemento como sucedía con los ficheros.

157
00:13:24,250 --> 00:13:28,040
Muy bien esto lo que respecta a trabajar con un solo registro.

158
00:13:28,080 --> 00:13:32,720
Ejecutamos un insert y lo recuperamos de esta forma con un fecha.

159
00:13:34,120 --> 00:13:35,440
Muy bien voy a comentar

160
00:13:38,080 --> 00:13:45,270
y vamos a centrarnos ahora en ejecutar una consulta para insertar varios registros de una sola vez.

161
00:13:45,310 --> 00:13:52,480
Esto lo vamos a hacer de la siguiente forma suponiendo que tenemos muy cómodamente una lista con varios

162
00:13:52,570 --> 00:14:00,520
usuarios estos usuarios los vamos a tener en forma de tuplas el mismo tipo de objeto que hemos visto

163
00:14:00,520 --> 00:14:04,010
que nos devolvía la base de datos.

164
00:14:04,290 --> 00:14:07,270
Pues vamos a tener exactamente el mismo formato.

165
00:14:07,270 --> 00:14:15,280
El primer elemento la primera para el primer usuario por ejemplo lo voy a llamar Mario tendrá 51 años

166
00:14:15,310 --> 00:14:25,510
por ejemplo y le misera a Mario arroba ejemplo punto en el siguiente registro voy a crear 3.

167
00:14:25,510 --> 00:14:35,920
Por ejemplo voy a poner aquí Mercedes que tendrá 38 años y será Mercedes arroba ejemplo puntocom y el

168
00:14:35,920 --> 00:14:40,790
último usuario que voy a insertar es Juan de 19 años.

169
00:14:41,200 --> 00:14:43,160
Juan arroba ejemplo puntocom.

170
00:14:43,480 --> 00:14:50,140
Por tanto partiendo de que tenemos muy bien organizado una lista con diferentes tuplas que simbolizan

171
00:14:50,680 --> 00:14:56,000
los usuarios tal y como los interpreta cuando nos los devuelve.

172
00:14:56,200 --> 00:15:04,840
La forma de insertar de forma masiva todos estos usuarios en la base de datos es la siguiente utilizando

173
00:15:04,840 --> 00:15:13,920
el cursor y en lugar de hacer un exequible vamos a hacer un executive Maini ejecutar varios.

174
00:15:13,930 --> 00:15:16,670
De esta forma y aquí vamos a utilizar.

175
00:15:17,560 --> 00:15:19,280
La siguiente sintaxis.

176
00:15:19,750 --> 00:15:29,620
Insert into tabla usuarios values y aquí vamos a poner un paréntesis y vamos a indicar de esta forma

177
00:15:29,620 --> 00:15:38,140
con tres interrogantes cómo indicando que vamos a insertar tres campos de forma masiva y luego justo

178
00:15:38,140 --> 00:15:40,940
fuera de lo que sería la consulta.

179
00:15:41,830 --> 00:15:47,890
La lista con los usuarios de esta forma ahora muy importante acordaros de hacer este cómic porque si

180
00:15:47,890 --> 00:15:53,740
no no se van a confirmar los cambios así que vamos a ejecutar de golpe esta inserción masiva de tres

181
00:15:53,740 --> 00:16:01,400
usuarios V finished vamos a inspeccionar la base de datos actualizamos aquí.

182
00:16:01,600 --> 00:16:06,290
Ya tengo aquí Héctor y los tres que ha añadido ahora Juan Mercedes y Mario.

183
00:16:08,350 --> 00:16:14,410
Evidentemente si volvemos a ejecutarlo control vamos a volver a añadir de forma masiva.

184
00:16:14,650 --> 00:16:19,310
Estos tres usuarios si actualizamos los tenemos por duplicado.

185
00:16:19,360 --> 00:16:24,180
Evidentemente ahora estamos trabajando con el ejemplo y no los queremos así que voy a seleccionarlos

186
00:16:24,190 --> 00:16:31,140
de esta forma arrastrando y voy a borrar los registros y voy a guardar los cambios.

187
00:16:31,280 --> 00:16:33,480
Guardar sería como hacer el comic aquí.

188
00:16:34,510 --> 00:16:37,270
Así que me quedan Juan Mercedes Mario y Héctor.

189
00:16:37,660 --> 00:16:39,480
Y lo último que vamos a ver.

190
00:16:40,220 --> 00:16:47,370
En esta primera elección es una vez hemos insertado de forma masiva cómo recuperar también de forma

191
00:16:47,370 --> 00:16:50,940
masiva varios registros de esta tabla de usuarios.

192
00:16:50,940 --> 00:16:57,420
Así que voy a comentarlo y para recuperar varios registros vamos a hacer exactamente lo mismo que antes

193
00:16:57,930 --> 00:17:08,840
cursor exequible vamos a seleccionar Select todos los campos from usuarios de la tabla de usuarios.

194
00:17:09,300 --> 00:17:13,190
Una vez ejecutamos esta consulta vamos a guardar.

195
00:17:13,320 --> 00:17:22,620
En esta ocasión la variable usuarios en plural es el resultado de ejecutar el método Fetch pero no un

196
00:17:22,830 --> 00:17:31,380
sino Holl vamos a recuperar todos los registros que hay en ese momento almacenados en el cursor y lo

197
00:17:31,380 --> 00:17:37,940
que vamos a recuperar es algo muy sencillo en Payton porque en otros lenguajes es un caos pero aquí

198
00:17:37,980 --> 00:17:41,800
es muy sencillo lo que hemos recuperado es en realidad una lista.

199
00:17:41,940 --> 00:17:48,450
Si queréis lo podemos mostrar antes de trabajarlo para que lo veáis pronto usuarios.

200
00:17:48,450 --> 00:17:54,270
Como veis tenemos aquí una lista y cada usuario es representado como si fuese una tupla simplemente

201
00:17:54,270 --> 00:18:04,740
podríamos hacer un fork por usuario y usuarios y mostrar por pantalla este usuario control.

202
00:18:04,930 --> 00:18:10,630
Y aquí tenemos los 4 usuarios os hemos recuperado de golpe de la base de datos perfecto.

203
00:18:10,680 --> 00:18:17,730
Bastante sencillo si quisiéramos mostrar únicamente el nombre accederemos al primer elemento de cada

204
00:18:17,730 --> 00:18:22,830
tupla y luego podríamos por ejemplo concatenar únicamente el email.

205
00:18:23,220 --> 00:18:28,050
De esta forma y ponerlo así nombre.

206
00:18:29,960 --> 00:18:30,910
Y aquí pondría

207
00:18:34,410 --> 00:18:36,570
saber y aquí lo tengo.

208
00:18:36,570 --> 00:18:38,900
No podría ponerlo así un poco adornado.

209
00:18:39,200 --> 00:18:44,800
Y como veis ya estamos trabajando con los elementos los registros que tenemos en la tabla y por esta

210
00:18:44,800 --> 00:18:51,930
elección lo dejamos aquí tenéis toda la información en los apuntes por si tenéis que repasar punto por

211
00:18:51,930 --> 00:18:52,710
punto.

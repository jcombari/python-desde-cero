1
00:00:00,960 --> 00:00:07,230
Como os decía sí que se utiliza la entrada de datos en los scripts pero que es un escritor bueno una

2
00:00:07,250 --> 00:00:13,080
scrip significa un guión y es lo que llevamos haciendo prácticamente todo el curso.

3
00:00:13,170 --> 00:00:19,470
Cuando estamos practicando Payton estamos creando scripts guiones con instrucciones definidas de antemano

4
00:00:19,740 --> 00:00:22,700
que van de arriba a abajo y se ejecutan del tirón.

5
00:00:23,400 --> 00:00:28,740
La peculiaridad de los scripts es que se guardan dentro del sistema operativo en un disco duro o algún

6
00:00:28,740 --> 00:00:30,330
lugar y luego los ejecutamos.

7
00:00:30,330 --> 00:00:36,570
Cuando nosotros queremos directamente desde el intérprete de Python Les pasamos un fichero con el código

8
00:00:36,600 --> 00:00:38,350
y lo ejecutamos.

9
00:00:38,580 --> 00:00:41,510
Por tanto como los ejecutamos desde el sistema operativo.

10
00:00:41,510 --> 00:00:47,990
Su peculiaridad es que pueden tomar datos del exterior y entonces pueden tener distintos comportamientos.

11
00:00:48,300 --> 00:00:56,230
Estos datos que los scripts permiten recibir son los argumentos para trabajar con Skype.

12
00:00:56,280 --> 00:01:01,530
Lo primero que tenemos que aprender es cómo ejecutar un script desde el sistema operativo así que vamos

13
00:01:01,530 --> 00:01:02,420
a hacerlo.

14
00:01:02,730 --> 00:01:09,960
Desgraciadamente desde el notebook de Júpiter no podemos ejecutar scripts pero pensado que fácilmente

15
00:01:09,990 --> 00:01:18,710
podemos ir a nuestra carpeta de cursos Payton y crear una carpeta que sea por ejemplo escribir y aquí

16
00:01:18,720 --> 00:01:21,420
practicar algunos scripts.

17
00:01:21,720 --> 00:01:25,770
Vamos a crear nuestro primer script y luego lo vamos a ejecutar.

18
00:01:26,010 --> 00:01:29,350
Lo más fácil es simplemente crear un nuevo fichero.

19
00:01:29,460 --> 00:01:30,120
Clic derecho.

20
00:01:30,120 --> 00:01:36,440
Nuevo documento de texto aquí vamos a tener que cambiar el nombre y también la extensión.

21
00:01:36,540 --> 00:01:45,090
Actualmente tenemos un archivo de tipo texto txt vamos a crear un archivo de tipo Payton O sea que tenemos

22
00:01:45,090 --> 00:01:51,670
que poner por ejemplo el nombre el primer script y la extensión Pi porque es un fichero Payton.

23
00:01:53,040 --> 00:01:58,620
Confirmar me dice que se va a cambiar la extensión y tal pero sin problemas le digo que sí muy bien

24
00:01:58,630 --> 00:02:05,450
ahora voy a editar con un editor como por ejemplo sublime y voy a escribir una instrucción muy sencilla

25
00:02:06,690 --> 00:02:07,970
Hola.

26
00:02:09,620 --> 00:02:13,010
Venido al primer Street.

27
00:02:13,960 --> 00:02:19,430
Esta es la única instrucción que quiero que se ejecute cuando llegue ya me voy a guardar controlase

28
00:02:19,510 --> 00:02:20,390
o file.

29
00:02:20,500 --> 00:02:23,890
Sabe bien.

30
00:02:23,950 --> 00:02:29,950
Ahora tenemos que ejecutar este script para poder ejecutar un script necesitamos abrir la terminal y

31
00:02:30,490 --> 00:02:37,510
pasándole a Payton el intérprete este fichero estando dentro podemos apretar la tecla Swift la flecha

32
00:02:37,510 --> 00:02:45,160
arriba el botón derecho del ratón y así nos saldrá una opción que dice Abrir ventana de comandos aquí.

33
00:02:45,250 --> 00:02:48,740
Como veis habrá una buena ventana de comandos en lo voy a hacer más pequeña.

34
00:02:49,100 --> 00:02:54,940
Entonces para ejecutar el script como sé que ya tengo Payton instalado y sólo tengo que escribir la

35
00:02:54,940 --> 00:03:03,330
palabra Payton y llamar al primer punto PIN y ejecutarlo con Enter.

36
00:03:03,510 --> 00:03:05,710
Como veis se ejecuta la instrucción.

37
00:03:05,740 --> 00:03:06,370
Hola.

38
00:03:06,610 --> 00:03:08,420
Bienvenido a tu primer scrip.

39
00:03:09,660 --> 00:03:10,350
Perfecto.

40
00:03:10,380 --> 00:03:11,360
Ahora ya lo tenemos.

41
00:03:11,370 --> 00:03:15,430
Ya sabemos llamar scripts pero la gracia era enviar datos.

42
00:03:15,450 --> 00:03:18,850
Por eso estábamos hablando de manejo de datos.

43
00:03:19,630 --> 00:03:24,720
Bueno pues estos datos que se envían al escrig se denominan argumentos y son valores que se pasan al

44
00:03:24,720 --> 00:03:25,650
ejecutarlo.

45
00:03:26,820 --> 00:03:28,900
Para enviarlos tenemos que añadirlos al final.

46
00:03:29,010 --> 00:03:35,190
Después de llamar la ejecución como si fueran texto extra que vamos a añadir.

47
00:03:35,970 --> 00:03:43,980
Todo lo que vamos a enviar se pasará como texto pero podemos enviar varios valores lo que pasa es que

48
00:03:43,980 --> 00:03:50,010
tenemos que separarlos por espacios muy importantes si enviamos una cadena de texto tendremos que ponerla

49
00:03:50,010 --> 00:03:58,140
entre comillas por ejemplo vamos a enviar un par de argumentos al primer escrito.

50
00:03:58,350 --> 00:04:06,090
Por ejemplo una cadena de texto le voy a poner entre comillas voy a poner una cadena de texto y luego

51
00:04:06,090 --> 00:04:12,680
voy a poner por ejemplo el número 5 pero recordad que esto se pasa como una cadena no como un número.

52
00:04:12,740 --> 00:04:18,450
Lo que pasa es que lo diferenciamos porque como una cadena de texto tiene varios espacios tenemos que

53
00:04:18,460 --> 00:04:23,700
delimitarlo con unas comillas para que interprete que todo eso es un valor.

54
00:04:23,790 --> 00:04:25,460
Uno de los argumentos.

55
00:04:25,860 --> 00:04:30,700
Si lo enviamos pues como veis el caso es que todavía no estamos haciendo nada.

56
00:04:30,870 --> 00:04:38,970
Debemos de alguna forma ir al script y tratar estas posibles valores estas posibles argumentos que estamos

57
00:04:38,970 --> 00:04:45,510
recibiendo para capturarlos tendremos que importar una librería nueva de sistema llamada Asics y con

58
00:04:45,510 --> 00:04:49,840
ella ya podremos interactuar con las distintas funcionalidades del sistema operativo.

59
00:04:50,020 --> 00:04:55,500
Y dado que es el sistema operativo el que está ejecutando el que podremos detectar los argumentos con

60
00:04:55,500 --> 00:04:57,210
el que lo llamamos.

61
00:04:57,210 --> 00:05:03,730
Vamos a por ello vamos a editar por tanto nuestro código y vamos a ir a la parte superior de todo y

62
00:05:03,750 --> 00:05:08,680
vamos a hacer un importe de la librería de sistema sikhs.

63
00:05:08,820 --> 00:05:19,200
Una vez ya lo tenemos vamos a mostrar una variable una propiedad del sistema que se llama ARC Hub y

64
00:05:19,260 --> 00:05:21,530
vamos a dibujarla justo aquí.

65
00:05:21,820 --> 00:05:24,330
Si os Arts.

66
00:05:25,470 --> 00:05:27,070
Vamos a guardarlo.

67
00:05:28,210 --> 00:05:33,940
Vamos a volver a ejecutar el script de nuevo buscando apretar la tecla arriba para ejecutarlo.

68
00:05:34,730 --> 00:05:43,410
Y como veis ahora que estamos utilizando esta función del sistema ARC nos dice que tenemos aquí una

69
00:05:43,410 --> 00:05:45,690
lista con tres valores.

70
00:05:45,690 --> 00:05:50,470
Primero tenemos el nombre del escrig Primer script punto PIB.

71
00:05:50,550 --> 00:05:56,260
Luego tenemos una cadena de texto y por último un número 5 pero también en forma de cadena.

72
00:05:56,370 --> 00:06:04,790
Muy bien pues gracias a esta función este sisar podemos sacar todos los argumentos que enviamos al scrip.

73
00:06:07,210 --> 00:06:13,080
Sabiendo la posición a la que estamos enviando el argumento podremos capturarlo como si fuera una lista.

74
00:06:13,880 --> 00:06:16,400
Y actuar en consecuencia.

75
00:06:16,460 --> 00:06:22,700
Un ejemplo un poco tonto vamos a crearlos vamos a crear un programa una especie de script que se llama

76
00:06:22,700 --> 00:06:28,280
escribir líneas y que muestre tantas veces el primer argumento como lo indicamos en el segundo.

77
00:06:28,490 --> 00:06:29,830
Vamos a crear un nuevo esquema.

78
00:06:31,430 --> 00:06:34,830
Hacé clic derecho nuevo de texto.

79
00:06:35,030 --> 00:06:41,240
Puedo llamarle escribir para baja líneas punto Pi.

80
00:06:42,340 --> 00:06:45,660
Voy a decirle que sí y vamos a editarlo.

81
00:06:45,730 --> 00:06:53,280
Podemos comenzar importándoles la librería el sistema y luego vamos a asignar por ejemplo a texto lo

82
00:06:53,290 --> 00:06:55,690
que se supone que pasaremos al primer argumento.

83
00:06:55,710 --> 00:06:56,550
6.

84
00:06:56,750 --> 00:06:59,550
RAC 1.

85
00:06:59,680 --> 00:07:04,550
Como si fuera una lista de acuerdo porque el primer elemento era el nombre del clip.

86
00:07:05,540 --> 00:07:13,210
Luego le pasamos las repeticiones que como es una cadena de texto tenemos que convertir la número entero.

87
00:07:13,210 --> 00:07:16,330
Por tanto si hacemos un casta.

88
00:07:16,990 --> 00:07:18,270
6.

89
00:07:19,040 --> 00:07:19,590
V.

90
00:07:20,610 --> 00:07:21,470
2.

91
00:07:21,840 --> 00:07:32,910
Y ahora podemos hacer un fork R Por ejemplo en el rancho le vamos a pasar las repeticiones y vamos a

92
00:07:32,910 --> 00:07:39,790
hacer un esprint del texto que es lo que queremos repetir tantas veces.

93
00:07:41,220 --> 00:07:45,610
A DARLO íbamos a ejecutarlo de nuevo.

94
00:07:45,780 --> 00:07:48,290
Tengo que volver a abrir la terminal.

95
00:07:49,480 --> 00:07:51,330
Abrir ventanas de comandos.

96
00:07:51,330 --> 00:07:52,820
Ahora esto más pequeño.

97
00:07:53,850 --> 00:07:59,830
Ejecutar boynton escribir líneas es un hobby.

98
00:08:01,290 --> 00:08:09,200
Por ejemplo vamos a decirle que escriba Hola cinco veces y ahí lo tengo.

99
00:08:10,480 --> 00:08:17,620
Nuestro script está tomando datos externos que no los está leyendo directamente por el teclado sino

100
00:08:17,620 --> 00:08:22,330
que nosotros los estamos enviando en el momento de ejecutar el escrito.

101
00:08:22,480 --> 00:08:28,120
Esto podría ser perfectamente una tarea automatizada que se ejecutase cada día a una hora determinada

102
00:08:28,270 --> 00:08:34,240
y le pasará a unos parámetros y este script se encargará de realizar alguna tarea que tuviera programada

103
00:08:34,240 --> 00:08:38,190
en mí en mi servidor o en donde yo quisiera.

104
00:08:38,230 --> 00:08:43,870
También tenéis que tener en cuenta que si ejecutamos un script que trabaja con argumentos y no se los

105
00:08:43,870 --> 00:08:46,170
pasamos al ejecutarlo va a fallar.

106
00:08:46,180 --> 00:08:51,490
Es decir si nosotros volvimos a llamar este scrip de líneas pero sin pasarle los argumentos correctamente

107
00:08:51,490 --> 00:08:58,330
o que le falte a uno o que le falten todos nos va a dar un error por qué damos por hecho que estamos

108
00:08:58,450 --> 00:09:01,210
utilizando estos argumentos.

109
00:09:01,210 --> 00:09:06,760
Entonces es recomendable que siempre antes de ejecutar un script con argumentos comprobemos que existen

110
00:09:06,850 --> 00:09:15,790
los que queremos utilizar o como mínimo una idea que os doy es que comprobéis si concuerda la longitud

111
00:09:15,970 --> 00:09:20,850
de la lista de argumentos con lo que se supone que vamos a utilizar.

112
00:09:21,910 --> 00:09:25,710
Vamos a editarlo un momento para que veáis que os lo que os quiero decir.

113
00:09:25,720 --> 00:09:31,320
Sé que voy a utilizar dos argumentos aparte del primero que es el número desde el nombre perdón del

114
00:09:31,320 --> 00:09:32,110
escrito.

115
00:09:32,200 --> 00:09:39,850
Por tanto lo que podemos comprobar antes de ejecutar el script es si la longitud de esta lista.

116
00:09:39,870 --> 00:09:41,380
6.

117
00:09:43,670 --> 00:09:49,570
Es por ejemplo 3 que es el número de argumentos necesarios para que se ejecute el escrito.

118
00:09:50,030 --> 00:09:52,940
Si esto se cumple entonces puede ejecutarlo todo.

119
00:09:53,120 --> 00:10:01,820
En caso de que no se compra voy a crear un enlace fuera del código fuera de libre y voy a poner un mensaje.

120
00:10:03,240 --> 00:10:04,090
Error.

121
00:10:04,690 --> 00:10:12,640
Introduce los argumentos correctamente y debajo puede poner un ejemplo de cómo se tiene que ejecutar

122
00:10:12,640 --> 00:10:26,770
el script ejemplo escribir líneas un Topy un texto voy a tener que ponerlo por ejemplo con unas simples

123
00:10:27,700 --> 00:10:31,150
texto y cinco veces.

124
00:10:32,160 --> 00:10:37,860
Esto es como un ejemplo de cómo se tiene que hacer por si alguien se equivoca si lo volvemos a ejecutar

125
00:10:37,860 --> 00:10:38,950
ahora.

126
00:10:40,160 --> 00:10:46,070
Pues ya no me da error sino que estoy tratando este error manualmente y le digo error introduce los

127
00:10:46,070 --> 00:10:47,210
argumentos correctamente.

128
00:10:47,210 --> 00:10:50,330
Por ejemplo escribir líneas de texto cinco veces.

129
00:10:50,340 --> 00:10:56,030
Pues ahora como el usuario ya sabe lo que tiene que hacer puedes escribir un texto perfectamente cinco

130
00:10:56,030 --> 00:11:00,730
veces y ahí lo tenemos.

131
00:11:00,740 --> 00:11:05,180
Por último una cosa que tenéis que tener en cuenta cuando estamos trabajando con el script con el sistema

132
00:11:05,180 --> 00:11:13,730
operativo es la codificación del texto porque suprime texto automáticamente ya da una codificación de

133
00:11:13,730 --> 00:11:17,730
texto que acepta utilizar tildes.

134
00:11:18,620 --> 00:11:26,000
Pero si creamos un fichero y no lo guardamos con la codificación correcta a la hora de ejecutar un print

135
00:11:26,030 --> 00:11:30,170
por ejemplo donde haya acentos tildes o sueñes nos dará error.

136
00:11:30,170 --> 00:11:33,780
Esto es lo comento porque a mi me ha pasado y quería deciros lo entonces.

137
00:11:34,830 --> 00:11:38,290
Esto puede suceder cuando queramos por ejemplo con un script.

138
00:11:40,300 --> 00:11:41,900
Vamos a crear un nuevo clip.

139
00:11:42,010 --> 00:11:47,110
Yo sé que este por ejemplo va a dar error voy a llamarlo codificación.

140
00:11:48,680 --> 00:11:49,870
Puntos VIP.

141
00:11:51,050 --> 00:11:56,910
Voy a decirle que sí y voy a abrirlo pero esta vez no con el test que ya me pone automáticamente en

142
00:11:56,910 --> 00:12:04,050
la codificación sino con el bloc de notas voy a abrir con otra aplicación.

143
00:12:06,200 --> 00:12:12,280
Y ahora voy a escribir con una tilde o con una ñ para que veáis lo que pasa.

144
00:12:12,330 --> 00:12:14,100
O a crear un escrito aquí.

145
00:12:14,150 --> 00:12:17,160
Este programa tiene.

146
00:12:18,700 --> 00:12:20,890
Código fuente.

147
00:12:20,880 --> 00:12:27,910
El español ya que hemos puesto alguna tilde y alcuna ñ.

148
00:12:28,580 --> 00:12:32,970
Pues cuando lo guardamos si lo ejecutamos desde la terminal.

149
00:12:33,670 --> 00:12:34,690
Como antes.

150
00:12:35,980 --> 00:12:39,200
Con codificación.

151
00:12:42,210 --> 00:12:51,090
Me salta un error de codificación dice que se detectó un carácter que no es f 8 en la posicion bla bla

152
00:12:51,090 --> 00:12:52,090
bla bla bla bla.

153
00:12:52,440 --> 00:12:54,180
Y no me funciona.

154
00:12:54,270 --> 00:13:02,520
Cómo se soluciona a la hora de guardar cuando hacemos guardar y guardar como y a la hora de guardar

155
00:13:02,520 --> 00:13:03,570
el fichero.

156
00:13:05,400 --> 00:13:10,890
Guardarlo por ejemplo con el nombre descodificación punto Pi y aquí abajo donde pone codificación cambiarle

157
00:13:11,310 --> 00:13:14,560
el tipo de ANSI a VF 8 y guardarlo.

158
00:13:16,270 --> 00:13:21,300
Aquí esta breve introducción a los scripts imaginarlo que podéis llegar a crear con ellos.

159
00:13:21,330 --> 00:13:27,140
Yo sólo os diré que mis mejores aplicaciones siempre han utilizado scripts automatizados y son las que

160
00:13:27,630 --> 00:13:31,440
he mandado algunos ingresos como programador independiente.

161
00:13:31,610 --> 00:13:36,100
Dejamos el tema de las entradas y en la próxima elección hablaremos de las salidas.

1
00:00:00,760 --> 00:00:07,200
Bien pues llegamos a La Sexta lección de esta unidad 15 de funcionalidades avanzadas y lo que vamos

2
00:00:07,200 --> 00:00:15,540
a ver es la primera de dos funciones que quiero que repasemos qué nos permiten realizar tareas sobre

3
00:00:15,540 --> 00:00:19,320
los distintos elementos de una lista o de un tirador.

4
00:00:19,540 --> 00:00:21,370
La primera de ellas es Filter.

5
00:00:21,660 --> 00:00:26,940
Tal como su nombre indica Filter significa filtrar y es una de mis funciones favoritas ya que a partir

6
00:00:26,940 --> 00:00:32,700
de una lista tuitera y una función condicional es capaz de devolver una nueva colección con los elementos

7
00:00:32,700 --> 00:00:35,250
filtrados que cumplan la condición.

8
00:00:35,250 --> 00:00:39,560
Por ejemplo supongamos que tenemos una lista con varios números.

9
00:00:41,540 --> 00:00:50,500
Vamos a poner por ejemplo 2 5 10 23 50 y 33.

10
00:00:51,130 --> 00:00:57,710
Ahora queremos filtrar esta lista y quedarnos únicamente con los elementos o los números que son múltiples.

11
00:00:57,720 --> 00:00:59,210
5.

12
00:00:59,480 --> 00:01:02,420
Como he dicho lo primero que hay que hacer es crear una función condicional.

13
00:01:02,490 --> 00:01:09,360
Esta función condicional lo que va a hacer es comprobar para cada elemento de esta lista una condición

14
00:01:10,140 --> 00:01:16,920
y tiene que devolver verdadero o falso dependiendo de si queremos filtrar o no. Es decir por ejemplo

15
00:01:17,580 --> 00:01:21,250
una función que se llama múltiple que va a comprobar si un número es múltiple.

16
00:01:21,250 --> 00:01:22,320
5.

17
00:01:22,570 --> 00:01:30,500
Levantar un número y comprobar si este número su módulo de 5 es igual a cero si esto es igual a cero

18
00:01:30,510 --> 00:01:32,860
es que este número es múltiple 5.

19
00:01:33,300 --> 00:01:35,540
Por tanto en este caso volveríamos truc.

20
00:01:36,150 --> 00:01:37,860
únicamente tenemos que hacer esto.

21
00:01:38,530 --> 00:01:45,220
Cuando un número de A thru significa que va a persistir en la lista o mejor dicho se devolverá para

22
00:01:45,220 --> 00:01:47,540
que forme parte de la nueva lista filtrada.

23
00:01:47,860 --> 00:01:51,700
Cómo se utiliza en conjunción con la función Filter.

24
00:01:52,080 --> 00:01:58,180
Pues primero Filter tenemos que pasar la función que va a filtrar cada uno de estos elementos de la

25
00:01:58,180 --> 00:02:00,170
lista y después la lista en sí.

26
00:02:00,940 --> 00:02:02,730
Si lo ejecutamos.

27
00:02:04,850 --> 00:02:07,930
Cómo veis obtenemos un objeto de tipo Filter.

28
00:02:08,240 --> 00:02:16,580
Pero podemos transformarlo fácilmente haciendo un cast a una lista lista y aquí le vamos a pasar esto

29
00:02:16,580 --> 00:02:22,070
de aquí y nos da 5 10 y 50.

30
00:02:22,460 --> 00:02:25,430
Este objeto Filter es un objeto integrable.

31
00:02:25,520 --> 00:02:31,870
Por tanto si guardase damos el resultado de este filtro por ejemplo en una variable.

32
00:02:32,300 --> 00:02:40,730
Luego con la función NEX podríamos recorrer uno a uno todos los elementos iterando que forman este filtro.

33
00:02:40,730 --> 00:02:47,480
Por tanto cuando utilizamos la función Filter tenemos que enviar una función condicional aquí la tenemos

34
00:02:47,570 --> 00:02:54,590
multiple pero como recordareis no es necesario definirlas porque podemos utilizar una función anónima.

35
00:02:54,770 --> 00:03:02,340
Vamos a transformar este filtro de múltiples 5 para que sea una función anónima Landa.

36
00:03:02,660 --> 00:03:14,510
Lo haremos de la siguiente forma Filter Landa le pasaríamos un número comprobaríamos si es múltiple

37
00:03:14,510 --> 00:03:16,010
de cinco con el módulo.

38
00:03:16,230 --> 00:03:17,730
Si es igual a cero.

39
00:03:18,920 --> 00:03:24,840
Aquí se acabaría la función landauri le pasaríamos la lista de números.

40
00:03:26,180 --> 00:03:29,020
Landa anónima lista de números.

41
00:03:29,210 --> 00:03:36,880
Si esto lo convertimos a una lista Cómo veis tenemos exactamente lo mismo que antes.

42
00:03:36,950 --> 00:03:43,850
Por lo tanto la función Filter utilizará en conjunto con las funciones Landa nos permite filtrar sobre

43
00:03:43,850 --> 00:03:50,660
la marcha sin tener que declarar nuevas funciones simples como ésta de múltiple que básicamente lo que

44
00:03:50,660 --> 00:03:52,680
harían es ocupar espacio en la memoria.

45
00:03:53,020 --> 00:03:56,200
Y en este caso la tenemos declarada en un momento de ejecución.

46
00:03:56,870 --> 00:04:02,060
Por tanto en una sola línea hemos definido y ejecutado el filtro utilizando una función anónima Landa

47
00:04:02,630 --> 00:04:05,980
y una lista de números muy bien.

48
00:04:06,050 --> 00:04:13,310
Sin embargo para mí más allá de filtrar listas con valores simples el verdadero potencial de Filter

49
00:04:13,700 --> 00:04:18,740
sale a relucir cuando necesitamos filtrar varios objetos de una lista y esto es algo que se da mucho

50
00:04:18,740 --> 00:04:19,810
en la práctica.

51
00:04:19,880 --> 00:04:24,680
Por ejemplo dada una lista con varias personas nos gustaría filtrar únicamente las que son menores de

52
00:04:24,680 --> 00:04:25,300
edad.

53
00:04:25,340 --> 00:04:33,590
Vamos a crear una clase klass Persona por ejemplo dentro vamos a crear un método init muy rápido para

54
00:04:33,590 --> 00:04:34,790
inicializar.

55
00:04:35,250 --> 00:04:48,140
Le vamos a pasar el nombre y edad Shelf nombre va a ser igual al nombre Shelf edad va a ser igual a

56
00:04:48,140 --> 00:04:49,200
edad.

57
00:04:49,610 --> 00:04:57,100
Y también vamos a redefinir el método especial Strings para mostrar información de esta persona.

58
00:04:58,330 --> 00:04:59,190
Return.

59
00:04:59,480 --> 00:05:04,160
Le vamos a pasar aquí el nombre de la edad.

60
00:05:04,660 --> 00:05:05,670
Años.

61
00:05:06,280 --> 00:05:15,910
FORMAT el nombre Shelf edad de acuerdo.

62
00:05:16,150 --> 00:05:23,290
A ver si lo tengo todo bien y vamos a crear una lista de personas que vamos a filtrar no sé hacerlo

63
00:05:23,710 --> 00:05:24,930
así.

64
00:05:26,210 --> 00:05:30,980
No hace falta que las queremos previamente dentro de esta lista simplemente las creamos en el momento

65
00:05:30,980 --> 00:05:34,180
de declarar la lista.

66
00:05:34,200 --> 00:05:36,580
Persona por ejemplo vamos a llamar a Juan.

67
00:05:36,690 --> 00:05:38,100
Lo vamos a crear aquí.

68
00:05:38,140 --> 00:05:58,340
35 años vamos a crear a Marta por ejemplo de 16 años a Manuel de 78 años y por último a Eduardo de 12

69
00:05:58,340 --> 00:05:58,980
años.

70
00:06:02,100 --> 00:06:04,920
Vamos a ejecutarlo a ver qué tenemos.

71
00:06:04,970 --> 00:06:07,370
Si está todo bien personas vale.

72
00:06:07,510 --> 00:06:10,420
Tenemos una lista con cuatro personas.

73
00:06:10,750 --> 00:06:16,180
Imaginaros como hemos dicho antes nos gustaría filtrar la lista para quedarnos únicamente con las personas

74
00:06:16,180 --> 00:06:17,490
que son menores de edad.

75
00:06:17,530 --> 00:06:19,240
Cómo lo podemos hacer.

76
00:06:19,270 --> 00:06:26,680
Pues creando una función Landa para comprobar si la edad de las personas es menor de 18 años para cada

77
00:06:26,680 --> 00:06:28,450
una de estas personas en la lista.

78
00:06:29,270 --> 00:06:39,560
Vamos a llamarla menores y vamos a hacer un Filter con una función blanda que va a recibir un objeto

79
00:06:39,560 --> 00:06:47,360
de tipo persona y esta persona vamos a comprobar de esta persona la edad si es menor que 18.

80
00:06:47,360 --> 00:06:52,320
Si esto es verdadero nos vamos a quedar con esta persona al filtrarla.

81
00:06:52,400 --> 00:06:57,690
Si no no le vamos a pasar la lista de personas.

82
00:06:58,220 --> 00:07:01,370
Aquí tenemos los menores.

83
00:07:01,820 --> 00:07:09,540
Ahora podríamos hacer un favor menor y en menores Prin menor.

84
00:07:10,240 --> 00:07:17,420
Y aquí tenemos ya únicamente en menores un objeto de tipo Filter pero considerable como una lista perfectamente

85
00:07:17,870 --> 00:07:22,280
únicamente con las personas que son menores de edad que son Eduardo y Marta.

86
00:07:22,520 --> 00:07:26,800
Sé que es un ejemplo sencillo pero estoy seguro que os puede servir como base para realizar filtrados

87
00:07:26,810 --> 00:07:28,780
en muchos de vuestros proyectos.

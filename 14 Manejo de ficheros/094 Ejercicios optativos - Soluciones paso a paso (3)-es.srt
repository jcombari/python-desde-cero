1
00:00:00,690 --> 00:00:08,150
Ahora viene el más grande de todos que aquí me he pasado un poco pero es un ejercicio interesante que

2
00:00:08,150 --> 00:00:14,930
es para concluir esta actualización de ejercicios del curso porque por si no lo sabéis estos ejercicios

3
00:00:14,940 --> 00:00:17,590
han añadido después de publicar el curso.

4
00:00:18,940 --> 00:00:23,570
Utilizando como base el ejercicio de los personajes que hicimos aquel donde teníamos el caballero guerrero

5
00:00:23,580 --> 00:00:29,320
el arquero en este ejercicio tendrás que crear un gestor de personajes llamado gestor punto Pi para

6
00:00:29,320 --> 00:00:32,160
añadir y borrar la información de los siguientes personajes.

7
00:00:32,160 --> 00:00:38,050
Bueno aquí os doy una tabla donde se ven los parámetros que llegamos a la conclusión que eran cuando

8
00:00:38,050 --> 00:00:44,680
hicimos aquel ejercicio es un recordatorio deberás hacer el uso del Modo pique y todos los cambios que

9
00:00:44,680 --> 00:00:50,800
realice se irán guardando en un fichero binario personajes punto PC KL un fichero binario píxel por

10
00:00:50,800 --> 00:00:54,300
lo que aunque cerremos el programa los datos persistirán.

11
00:00:54,640 --> 00:01:00,370
Crea dos clases un personaje y otro gestor la clase de personaje deberá permitir crear un personaje

12
00:01:00,550 --> 00:01:08,470
con el nombre que será la clase y sus propiedades de vida ataque defensa y alcance que deben ser números

13
00:01:08,470 --> 00:01:12,190
enteros positivos mayor que ser obligatoriamente.

14
00:01:12,850 --> 00:01:17,110
Por otro lado la clase gestor deberá incorporar todos los métodos necesarios para añadir personajes

15
00:01:17,110 --> 00:01:18,340
mostrarlos y borrarlos.

16
00:01:18,430 --> 00:01:23,280
Por ejemplo a partir de su nombre tendrás que pensar una forma de hacerlo.

17
00:01:23,410 --> 00:01:28,990
Además de los métodos esenciales para guardar los cambios en el fichero personajes pixel que se deberían

18
00:01:28,990 --> 00:01:33,820
de ejecutar automáticamente en caso de que el personaje ya exista en el gestor entonces no se creará.

19
00:01:33,820 --> 00:01:40,070
Es decir si un personaje que hemos añadido un nombre se repite pues no se podrá volver a crear.

20
00:01:42,770 --> 00:01:50,540
Vamos a centrarnos primero en esta parte y luego cuando ya tengamos hecha toda esta estructura nos centraremos

21
00:01:50,540 --> 00:01:59,980
en trabajar los últimos puntos así que nos indican crear una especie de gestor.

22
00:02:00,560 --> 00:02:04,820
Tenemos que crear la estructura de las clases y los objetos.

23
00:02:04,820 --> 00:02:10,750
No es necesario crear un menú para crearlos dinámicamente que nos esté pidiendo a la máquina el nombre

24
00:02:10,760 --> 00:02:11,860
la vida y todo.

25
00:02:12,010 --> 00:02:16,120
No es necesario pero como mínimo tenemos que implementar las clases bases.

26
00:02:17,300 --> 00:02:26,750
Así que vamos a comenzar con lo más típico de siempre que sin importar proemio importa copen y el módulo

27
00:02:26,780 --> 00:02:28,680
pixel para poder trabajar.

28
00:02:28,800 --> 00:02:41,100
Voy a llamarle gestor un Topy y vamos a comenzar con los personajes klass Personaje personaje vamos

29
00:02:41,120 --> 00:02:55,690
a por el constructor de Init Shelf nombre vida ataque defensa y alcance.

30
00:02:56,900 --> 00:03:11,480
Ahora vamos a asignar pues todo esto el nombre al nombre la vida la vida el ataque el ataque a defensa

31
00:03:13,910 --> 00:03:17,100
y finalmente el alcance.

32
00:03:18,890 --> 00:03:24,000
Vamos a dejarlo así no vamos a añadir nada más por ahora.

33
00:03:24,260 --> 00:03:33,130
Un caso podríamos crear un método string por si queremos mostrar información de este personaje.

34
00:03:33,300 --> 00:03:41,540
Vamos a ser un RETURN y por ejemplo vamos a poner así aquí el nombre y luego vamos a indicar la vida

35
00:03:41,910 --> 00:03:43,140
vida.

36
00:03:44,420 --> 00:03:53,870
El ataque por ejemplo la defensa y finalmente el alcance.

37
00:03:53,960 --> 00:04:00,680
Por si queremos comprobar estos datos de este objeto personaje cuando lo creamos.

38
00:04:03,450 --> 00:04:07,010
Vamos a crear un gestor que nos permita gestionar los personajes.

39
00:04:07,020 --> 00:04:10,310
Aquí es cuando tenéis que ser listos.

40
00:04:11,710 --> 00:04:17,860
Recordar que habíamos hecho un ejercicio muy parecido a lo que estamos haciendo ahora con pixel ir allí

41
00:04:17,980 --> 00:04:20,600
y copiar lo que teníamos.

42
00:04:20,620 --> 00:04:24,840
Yo voy a hacerlo y voy a copiar aquí.

43
00:04:25,180 --> 00:04:31,600
Cuando decimos que el catálogo de películas con ficheros y pixel que en esencia es lo mismo las películas

44
00:04:31,600 --> 00:04:35,460
o los personajes y el gestor es el catálogo.

45
00:04:35,470 --> 00:04:41,840
Por tanto voy a poner aquí el código de mi catálogo y vamos a adaptarlo.

46
00:04:41,950 --> 00:04:49,900
Tampoco es necesario hacer hasta el final con el móvil con el delete aquel del final y voy a cambiar

47
00:04:49,900 --> 00:04:53,190
algunas cosillas para adaptarlo por ejemplo como esto es un.

48
00:04:53,260 --> 00:04:55,230
No tengo que ir borrando el fichero todo el rato.

49
00:04:55,240 --> 00:04:57,500
Por tanto los los voy a borrar.

50
00:04:58,610 --> 00:05:05,180
En vez de películas o mejor dicho en vez de catálogo se llamará gestor en vez de películas se llamará

51
00:05:05,180 --> 00:05:10,490
personaje de la lista que tenemos que almacenar.

52
00:05:10,490 --> 00:05:20,000
Tenemos el cargador correcto lo que cargaremos pero lo que agregaremos eran personajes Fijaros que incluso

53
00:05:20,000 --> 00:05:25,310
la app de películas no sirve para la vez personaje y agregaremos un nuevo personaje y luego guardaremos

54
00:05:25,310 --> 00:05:28,960
este fichero para mostrar los personajes.

55
00:05:29,210 --> 00:05:36,210
Comprobaremos si la ley si hay algún personaje aquí diríamos que el gestor está vacío.

56
00:05:36,230 --> 00:05:44,390
Aquí podríamos poner personajes para ir recorriendo fichero Open catálogo que se llamará personajes

57
00:05:46,340 --> 00:05:51,130
lugares de películas tendríamos personajes.

58
00:05:51,130 --> 00:05:59,570
Se han cargado personajes y mostraremos Aquí los personajes que se han cargado.

59
00:06:00,050 --> 00:06:04,590
Y por último personajes en lugar de películas.

60
00:06:04,690 --> 00:06:09,290
Y aquí también personajes aquí.

61
00:06:09,950 --> 00:06:14,330
Evidentemente no va a ser todo exactamente igual así que vamos a tener que comprobar si esto nos sirve

62
00:06:14,420 --> 00:06:17,900
para hacer lo que queremos teníamos y lo recordáis.

63
00:06:17,900 --> 00:06:23,340
Una condición explícita para añadir un personaje que hará que este no se encontrase allá adentro es

64
00:06:23,340 --> 00:06:29,180
decir que no concordar al nombre con un personaje que ya estaba en nuestro gestor de personajes.

65
00:06:29,870 --> 00:06:34,730
Así que de alguna forma vamos a tener que recorrer la lista de personajes y comprobar si no se encuentra

66
00:06:34,730 --> 00:06:41,110
ya este personaje dentro y eso lo podemos hacer con un for four.

67
00:06:42,140 --> 00:06:51,050
Vamos a llamarlo personaje temporal al que estamos recorriendo la lista himself personajes vamos a ir

68
00:06:51,170 --> 00:06:56,400
comparando si alguno de estos personajes de la lista.

69
00:06:57,590 --> 00:07:01,840
Personajes concuerdan nombre con el nombre.

70
00:07:01,850 --> 00:07:09,620
Lo vamos a tener que hacer con Unicef y peten nombre igual al penumbra nombre que estamos pasando que

71
00:07:09,620 --> 00:07:11,740
queremos añadir.

72
00:07:12,600 --> 00:07:18,010
Entonces digamos que este personaje ya existiría para finalizar esta función.

73
00:07:18,020 --> 00:07:22,210
Podríamos hacer un RETURN vacío aquí en caso de que esto no ocurra.

74
00:07:22,520 --> 00:07:26,960
Significa que no se ha encontrado no se habrán recorrido todos los personajes no se habrán encontrado

75
00:07:26,960 --> 00:07:28,310
ninguno con ese nombre.

76
00:07:28,370 --> 00:07:29,760
Por tanto ya podremos.

77
00:07:31,420 --> 00:07:37,730
Añadir este personaje a la lista de personajes de esta forma y guardar el fichero fácilmente.

78
00:07:39,920 --> 00:07:44,040
Y luego si lo recordáis teníamos otra necesidad.

79
00:07:44,360 --> 00:07:53,360
Y es que aparte de añadir y mostrar también teníamos que permitir borrar a partir de su nombre.

80
00:07:53,390 --> 00:07:56,890
Básicamente sería lo que ya tenemos.

81
00:07:57,140 --> 00:08:01,320
La primera parte en busca de un nombre.

82
00:08:01,630 --> 00:08:08,270
Y entonces en lugar de añadir a la lista borrarlo así que vamos a copiar todo este método agregar llamarle

83
00:08:08,930 --> 00:08:09,830
borrar.

84
00:08:10,010 --> 00:08:11,390
Le vamos a pasar a un personaje.

85
00:08:11,420 --> 00:08:18,020
O mejor dicho vamos a pasarle un nombre vamos a pasarle un parámetro que sea una cadena de texto con

86
00:08:18,020 --> 00:08:22,370
el nombre del personaje que queremos borrar para cada personaje.

87
00:08:22,370 --> 00:08:27,530
La lista de personajes en esta ocasión vamos a comprobar simplemente el nombre si concuerda el nombre

88
00:08:27,530 --> 00:08:32,080
del personaje que hay en la lista con el nombre que estamos pasando.

89
00:08:32,540 --> 00:08:38,790
Y entonces aquí tendríamos que borrarlo para borrarlo tendríamos que hacerlo.

90
00:08:39,950 --> 00:08:47,380
Pues supongo que podríamos hacerlo con un Remove personajes remus por aquí le podremos pasar el personaje

91
00:08:47,440 --> 00:08:48,800
que queremos borrar.

92
00:08:48,820 --> 00:08:55,870
Teóricamente debería funcionar si por alguna razón o no funciona tendríamos que hacer un enumeré y borrar

93
00:08:55,870 --> 00:09:01,920
por ejemplo con un método pop o con un DLC y luego guardarlo.

94
00:09:02,320 --> 00:09:04,230
A partir del índice como es.

95
00:09:06,280 --> 00:09:11,020
Aquí podríamos añadir un mensaje justo cuando los hemos borrado.

96
00:09:11,080 --> 00:09:12,430
Aquí podríamos hacer un RETURN.

97
00:09:12,670 --> 00:09:15,860
Para finalizar todo el bucle sin salirnos ya.

98
00:09:16,360 --> 00:09:23,650
Y una vez lo hemos borrado mostrará un mensaje que diga con un salto de línea por ejemplo borrando el

99
00:09:23,650 --> 00:09:25,650
personaje.

100
00:09:26,500 --> 00:09:30,010
O mejor dicho personaje

101
00:09:33,340 --> 00:09:40,710
borrado y aquí le vamos a pasar el nombre del personaje que acabamos de borrar.

102
00:09:41,980 --> 00:09:49,510
Y creo que con esto ya podemos mostrar los personajes podemos agregar personajes podemos borrar y automáticamente

103
00:09:49,510 --> 00:09:53,760
se está gestionando el guardado y el cargado de este fichero.

104
00:09:53,890 --> 00:09:55,630
Este personaje es un topic.

105
00:09:56,700 --> 00:10:02,090
Que es una copia de nuestro catálogo aquel que hicimos o saque algo con como mínimo de algo ha servido

106
00:10:02,720 --> 00:10:06,050
hacer aquel ejercicio o aquel ejemplo.

107
00:10:06,050 --> 00:10:10,630
Así que vamos a ver qué es lo que nos piden ahora que más o menos tenemos esté implementado y se crea

108
00:10:10,640 --> 00:10:16,400
los tres personajes de la tabla anterior y de los al gestor muestra los personajes el gestor borra el

109
00:10:16,400 --> 00:10:20,550
arquero y muestra de nuevo el gestor.

110
00:10:20,620 --> 00:10:25,280
Bien vamos a por ello vamos a ser Abajo del todo y vamos a trabajar todo esto.

111
00:10:25,400 --> 00:10:27,270
Vamos a comenzar creando un gestor.

112
00:10:27,350 --> 00:10:30,500
Podríamos llamarlo así con mayúscula gestor.

113
00:10:30,920 --> 00:10:35,570
Vamos a empezar mostrándolos gestor mostrar el gestor a que tenemos dentro.

114
00:10:35,750 --> 00:10:41,720
Vamos a ejecutar el script este gestor creo que podría ejecutarlo aquí.

115
00:10:41,750 --> 00:10:42,440
Sublime.

116
00:10:42,590 --> 00:10:50,730
Porque no hay que pasar ningún argumento y creo que me da algún tipo de error guardar.

117
00:10:50,870 --> 00:10:55,200
Al parecer tengo algún tipo de error de fabulaciones.

118
00:10:55,940 --> 00:10:58,260
En algún lugar vale.

119
00:10:58,640 --> 00:11:03,170
Aquí tengo un problema cuando estoy seleccionando con sublime todo esto.

120
00:11:03,170 --> 00:11:11,900
Fijaros que selecciono algunos tabulación me aparecen con una línea y otras me aparecen con puntitos.

121
00:11:12,170 --> 00:11:17,720
Bueno para que funcione correctamente el fichero Payton tiene que ser todo lo tabulación es puntitos

122
00:11:17,720 --> 00:11:27,410
son espacios así que me voy a venir aquí Payton perdón tuvieseis y voy a indicar que convierta todas

123
00:11:27,410 --> 00:11:33,650
las indemnizaciones a espacios de esta forma así he transformado todas las fabulaciones cada tabulación

124
00:11:33,650 --> 00:11:35,070
a cuatro espacios.

125
00:11:35,360 --> 00:11:40,060
Teóricamente ahora no me debería dar terror porque lo que han encontrado es que algunos sitios están

126
00:11:40,070 --> 00:11:43,870
utilizando espacios en otro estado utilizando fabulaciones.

127
00:11:43,960 --> 00:11:46,070
Voy a guardar y ejecutar de nuevo.

128
00:11:46,520 --> 00:11:48,990
Y ahora sí que me funciona me dice el fichero está vacío.

129
00:11:49,010 --> 00:11:50,960
Se han cargado 0 personajes.

130
00:11:51,050 --> 00:11:52,940
El gestor está vacío.

131
00:11:52,940 --> 00:11:56,110
Esto me lo vuelve a mostrar.

132
00:11:56,110 --> 00:12:00,270
Bueno claro porque lo hemos puesto aquí arriba en el mostrar.

133
00:12:00,290 --> 00:12:02,300
El gestor está vacío.

134
00:12:02,300 --> 00:12:05,690
Claro una cosa es el gestor y otra cosa es el fichero.

135
00:12:05,960 --> 00:12:13,290
Podría simplemente comentar lo del fichero poner aquí un pas para que no ocurra dos veces.

136
00:12:13,310 --> 00:12:15,090
Voy a volver a ejecutarlo.

137
00:12:15,140 --> 00:12:17,810
Se han cargado 0 personajes el gestor está vacío.

138
00:12:18,060 --> 00:12:18,710
Vale.

139
00:12:19,070 --> 00:12:24,630
Vamos a crear los personajes tal como los tenemos en esta tabla.

140
00:12:24,770 --> 00:12:35,690
Voy a comenzar agregando al gestor al agregar agregar agregar así un nuevo personaje voy a crear dinámicamente

141
00:12:36,640 --> 00:12:37,180
caballero

142
00:12:40,130 --> 00:12:45,570
con estas propiedades 4 2 4 2.

143
00:12:48,170 --> 00:12:49,920
Al final le dejamos agregara.

144
00:12:50,850 --> 00:12:51,450
Vale.

145
00:12:53,120 --> 00:12:55,200
Vamos a crear también un guerrero.

146
00:12:56,610 --> 00:13:05,020
Con las propiedades 2 4 2 y 4 y otro arquero.

147
00:13:08,550 --> 00:13:21,200
Con las propiedades 2 4 1 y 8 muy bien y después de agregarlos voy a volver a mostrar qué es lo que

148
00:13:21,200 --> 00:13:23,100
tenemos.

149
00:13:23,210 --> 00:13:29,600
Voy a recordar voy a ejecutar y parece que últimamente lo más que tenga errores.

150
00:13:29,600 --> 00:13:32,630
A ver qué sucede ahora.

151
00:13:32,630 --> 00:13:38,860
Madre mía estoy a las barrois que no es persona es personaje ya confuso.

152
00:13:39,080 --> 00:13:41,310
Seguro que os habéis dado cuenta antes que yo.

153
00:13:41,320 --> 00:13:45,520
Bueno vamos a ejecutarlo ahora guardarlo para ejecutarlo.

154
00:13:46,030 --> 00:13:51,040
Y ahora si se han cargado 0 personajes el gesto está vacío.

155
00:13:52,970 --> 00:13:57,850
Y por alguna razón el format Igual es que no lo he creado correctamente.

156
00:13:58,660 --> 00:14:04,680
Vale me he descuidado de añadir el formato seguro que también os habéis dado cuenta antes que yo así

157
00:14:04,780 --> 00:14:19,180
que voy a tener que añadirlo aquí el nombre se lo pida el fatal que Selfish defensa Shelf alcance vamos

158
00:14:19,180 --> 00:14:20,960
a ejecutarlo.

159
00:14:20,980 --> 00:14:26,650
Se han cargado 3 personajes ya estaban creados el caballero el guerrero y el arquero.

160
00:14:27,270 --> 00:14:28,310
Y entonces.

161
00:14:29,480 --> 00:14:33,020
Como lo hemos mostrado hemos intentado volver a añadirlos.

162
00:14:33,020 --> 00:14:34,590
No se han vuelto a crear.

163
00:14:34,700 --> 00:14:40,920
A lo mejor parecería que sí pero no porque hemos comprobado que no se creen si tienen el mismo nombre.

164
00:14:41,090 --> 00:14:43,100
Pero al hacer otro mostrar reaparecen otra vez.

165
00:14:43,100 --> 00:14:52,710
O sea si yo comento esto y vuelvo a ejecutar el programa se cargan tres personajes.

166
00:14:52,850 --> 00:15:00,470
Si yo estuviera creando personajes hasta el infinito cada vez que aprieto y ejecutar código se tendrían

167
00:15:00,470 --> 00:15:06,590
que crear tres personajes nuevos pero como no podemos duplicarlos ahora sí a cambio de caballero pusiera

168
00:15:08,320 --> 00:15:10,920
caballera era muy tonto.

169
00:15:10,940 --> 00:15:17,910
Pero bueno caballera y lo ejecutase como mínimo se habría creado una caballera.

170
00:15:18,950 --> 00:15:21,270
Y ahora la próxima vez que ejecute este código.

171
00:15:21,470 --> 00:15:26,160
Si lo comento todo debería tener 4 personajes.

172
00:15:26,420 --> 00:15:29,990
Ahora se han cargado 4 personajes caballero guerrero arquero y caballera.

173
00:15:31,350 --> 00:15:40,400
Vale bueno que no nos piden ahora pues nos piden borrar por ejemplo el arquero voy a borrar el arquero

174
00:15:40,420 --> 00:15:44,200
también voy a borrar la caballera acoger.

175
00:15:45,100 --> 00:15:49,620
Voy a comentar también este mostrar que que cada vez que abrimos el gestor todo se carga de la memoria

176
00:15:49,630 --> 00:15:53,440
evidentemente borrar.

177
00:15:53,530 --> 00:15:57,080
A ver si funciona arquero y también voy a borrar.

178
00:15:58,210 --> 00:16:06,430
La caballería lo voy a mostrar que es lo que hay después de borrar los voy a ejecutarlo.

179
00:16:06,430 --> 00:16:13,360
Se han cargado 4 personajes personajes arquero borrado personaje caballera borrado y me quedan Cavallero

180
00:16:13,660 --> 00:16:15,800
cuatro de vida blabla y Guerreiro.

181
00:16:17,450 --> 00:16:26,410
Bueno parece que nuestro gestor funciona bien sería cuestión de pulirlo seguir trabajando con él y como

182
00:16:26,410 --> 00:16:33,100
mínimo aunque el ejercicio ha sido bastante largo podéis haber apreciado como una estructura base que

183
00:16:33,100 --> 00:16:38,380
teníamos nos puede servir para hacer otras la programación.

184
00:16:38,380 --> 00:16:41,030
En realidad es siempre así.

185
00:16:41,170 --> 00:16:48,530
Crear tus propias librerías de código tus propios módulos tus propios programas y adaptarlos a tus necesidades.

186
00:16:48,580 --> 00:16:54,340
Dependiendo del proyecto en sí o sea que es vital desarrollar una buena biblioteca de tu propio código

187
00:16:54,520 --> 00:16:56,160
para poder reutilizarla.

188
00:16:56,680 --> 00:17:01,090
Y eso es lo que estoy intentando transmitiros durante todo el curso haciendo muchos ejercicios para

189
00:17:01,090 --> 00:17:03,610
que podréis crear vuestra propia librería.

190
00:17:05,120 --> 00:17:05,720
En fin.

191
00:17:05,750 --> 00:17:12,890
Disculpa los lapsus pero por suerte ya hemos llegado al final ya que acaba estos ejercicios del tema

192
00:17:13,070 --> 00:17:16,150
12 de ficheros y seguimos con el curso.

193
00:17:16,160 --> 00:17:18,080
Nos vemos en la próxima elección.
